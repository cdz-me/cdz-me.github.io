<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>HomePage</title>
    <url>/homepage/HomePage/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="密码错误, 请再试试." data-whm="出现了个故障，这个文章不能被校验, 但是你还是可以看解密后的内容.">
  <script id="hbeData" type="hbeData" data-hmacdigest="30f77e14b0e4aa05df6ee49f222531c17d851858221c65a136ff8dce224a92df"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">这儿输入密码.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>homepage</category>
      </categories>
      <tags>
        <tag>homepage-tag</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/uncategorized/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>基于阿里云OSS搭建私人笔记</title>
    <url>/TechNotes/%E5%9F%BA%E4%BA%8E%E9%98%BF%E9%87%8C%E4%BA%91OSS%E6%90%AD%E5%BB%BA%E7%A7%81%E4%BA%BA%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h1 id="整体规划"><a href="#整体规划" class="headerlink" title="整体规划"></a>整体规划</h1><p>目前，市场上各类笔记产品都挺多的，有道云笔记、印象笔记、简书、notion都是比较成熟、且已经市场化的产品，作为一个普通的用户使用这些学习成本更低，大厂的备份应该更安全（理论如此）。本地的MD编辑器有VScode、Typora、marktext等工具。<strong>因此，这就是个自己瞎折腾的记录与总结~</strong></p>
<p>成品分享地址：<a href="http://43.248.137.35:58085/BBkRJRB-Gr">跳转</a>。由于是走内网穿透，链接可能会挂，内容一致。</p>
<h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><ol>
<li>易用性上，B&#x2F;S架构，公网随时可以开写，当作随手记。支持分享。</li>
<li>构建上，服务端轻量化，搭建简单。</li>
<li>安全上，源文件自行控制，加密存储。公网访问密码保护。</li>
</ol>
<h2 id="实现方式与整体流程"><a href="#实现方式与整体流程" class="headerlink" title="实现方式与整体流程"></a>实现方式与整体流程</h2><p><strong>本次就是使用开源、基于S3存储的笔记应用Notea，与阿里云OSS的存储，搭建属于自己的笔记平台。</strong></p>
<p><a href="https://github.com/notea-org/notea">Notea</a>：Notea是存储在S3上的自托管笔记应用程序，Notea不需要数据库。笔记存储在AWSS3存储桶或兼容的API中。这意味着您可以使用MinIO（自托管）、阿里云OSS（如AWSS3）或NAS来存储您的数据。</p>
<p>阿里云OSS：阿里云对象存储 OSS（Object Storage Service）是一款海量、安全、低成本、高可靠的云存储服务，支持多种存储类型。（简单理解，高可靠的”网盘“，可别真当网盘用了，成本太高，富哥请忽视）</p>
<p>S3存储：S3是AmazonWebServices(AWS)提供的一项服务，全名是 Simple Storage Service，简便的存储服务，通过基于RESTfulAPI的接口提供对象存储。</p>
<p>整体设计流程图如下，加上标记的是本次选择的方式。</p>
<p> <img src="https://img-cdz.oss-cn-shanghai.aliyuncs.com/images/20240219-%E5%BB%BA%E8%AE%BE%E6%B5%81%E7%A8%8B%E5%9B%BE.png"></p>
<hr>
<h1 id="开始动手"><a href="#开始动手" class="headerlink" title="开始动手"></a>开始动手</h1><h2 id="存储篇"><a href="#存储篇" class="headerlink" title="存储篇"></a>存储篇</h2><p>以阿里云OSS为例，技术步骤分为<strong>开通对象存储→创建与配置bucket→创建子权限账号</strong>。具体费用可以购买阿里云的套餐包，或者按量收费。费用不做介绍，自行查看OSS的<a href="https://help.aliyun.com/zh/oss/product-overview/billing-overview?spm=a2c4g.11186623.0.i5">计费方式</a>与<a href="https://www.aliyun.com/price/product?spm=5176.27921368.package-recommend-tool.7.1dc11450AGe4WO#/oss/detail/oss">定价详情</a>。</p>
<p>ps：不同于云盘仅按照容量收费，OSS按照存储类型，存储空间、请求次数、流量大小等项计费。</p>
<h3 id="开通对象存储"><a href="#开通对象存储" class="headerlink" title="开通对象存储"></a>开通对象存储</h3><ol>
<li>打开<a href="https://www.aliyun.com/product/oss?utm_content=g_1000247377&source=5176.11533457&userCode=zvq1ezpf">OSS网站</a>，注册、登录。</li>
<li>勾选服务协议，然后点击立即开通，有警告的话点击确定（不然能咋办呢╮(╯▽╰)╭）。</li>
</ol>
<h3 id="创建与配置bucket"><a href="#创建与配置bucket" class="headerlink" title="创建与配置bucket"></a>创建与配置bucket</h3><ol>
<li>登录OSS<a href="https://oss.console.aliyun.com/bucket">控制台</a>。</li>
<li>创建bucket与基础设置（下图，绿框重点关注，甚至需要记下；红框涉及费用）。</li>
</ol>
<p><img src="https://img-cdz.oss-cn-shanghai.aliyuncs.com/images/20240219-%E5%88%9B%E5%BB%BAbucket%E4%B8%8E%E5%9F%BA%E7%A1%80%E8%AE%BE%E7%BD%AE.png"></p>
<p>各项的注意事项，本身提示已经写了，需要关注的有：</p>
<ul>
<li>Bucekt名称唯一、地域属性（endpoint）不可修改。</li>
<li>存储类型建议”标准存储“，其余的对于笔记不太合适，不要因为价格便宜而选了不合适自己的。</li>
<li>存储冗余类型如果需要更高可靠，选择”同城冗余存储“（当然更贵一些），一般选择”本地冗余存储“就行。</li>
<li>读写权限，一定选择<strong>私有</strong>，你也不想你的笔记被其他人看到吧？</li>
<li>其他功能随便点点就行了，看好是否收费就行。</li>
</ul>
<p>需要重点记下的内容有</p>
<table><tr><td bgcolor=DarkSeaGreen>Bucket名称：chdz</td></tr></table>
<table><tr><td bgcolor=DarkSeaGreen>Endpoint：oss-cn-beijing.aliyuncs.com</td></tr></table>

<p>创建完成后，还有很多进阶配置，例如版本控制、域名管理、传输加速……，有些是收费的，有些目前免费使用，具体不做赘述，自行摸索吧。</p>
<h3 id="创建子账号"><a href="#创建子账号" class="headerlink" title="创建子账号"></a>创建子账号</h3><p>空间创建好了，接下来创建一个子账号，可以用来访问，管理这个bucket空间。</p>
<ol>
<li>打开阿里云的<a href="https://ram.console.aliyun.com/users">访问控制</a>界面。</li>
<li>在RAM 访问控制-身份管理-用户界面，选择”创建用户“，创建一个登录名称。</li>
</ol>
<p> <img src="https://img-cdz.oss-cn-shanghai.aliyuncs.com/images/20240219-%E9%98%BF%E9%87%8C%E4%BA%91RAM%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7.png"></p>
<p>因为此步骤涉及到你阿里云账号权限配置，会二次验证身份。</p>
<p>创建完成后，<strong>千万别关闭创建用户界面</strong>。这里需要复制并<strong>记下AccessKey ID和AccessKey Secret</strong>。一旦关闭后，无法找回，只能删除重新创建一个吧。</p>
<p> <img src="https://img-cdz.oss-cn-shanghai.aliyuncs.com/images/20240219-%E9%98%BF%E9%87%8C%E4%BA%91%E5%88%9B%E5%BB%BA%E7%94%A8%E6%88%B7.png"></p>
<p><strong>复制后，内容形式如下：</strong></p>
<p>用户登录名称 <a href="mailto:&#x63;&#104;&#100;&#x7a;&#64;&#x31;&#x32;&#54;&#x35;&#x32;&#x30;&#49;&#50;&#x30;&#57;&#x33;&#x34;&#56;&#x36;&#x37;&#x35;&#46;&#x6f;&#x6e;&#97;&#x6c;&#105;&#121;&#117;&#x6e;&#46;&#99;&#111;&#109;">&#x63;&#104;&#100;&#x7a;&#64;&#x31;&#x32;&#54;&#x35;&#x32;&#x30;&#49;&#50;&#x30;&#57;&#x33;&#x34;&#56;&#x36;&#x37;&#x35;&#46;&#x6f;&#x6e;&#97;&#x6c;&#105;&#121;&#117;&#x6e;&#46;&#99;&#111;&#109;</a></p>
<p>AccessKey ID LTAxxxxx</p>
<p>AccessKey Secret h0nExxxx</p>
<ol start="3">
<li><p>配置此账号的权限，让其可以访问我们创建的bucket空间，如下图所示。</p>
<p> <img src="https://img-cdz.oss-cn-shanghai.aliyuncs.com/images/20240219-%E9%98%BF%E9%87%8C%E4%BA%91RAM%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E9%85%8D%E7%BD%AE%E6%9D%83%E9%99%90.png"></p>
<p>需要注意的是，为了方便（偷懒），这块我配置的是让此账号可以管理所有OSS。如果要精细化权限，可以设置资源组，把bucket加入资源组，然后授权此账号可以访问指定资源组。</p>
</li>
<li><p>完成</p>
<p>总结下，需要重点记录下的信息有：</p>
<table><tr><td bgcolor=DarkSeaGreen>Bucket名称：chdz</td></tr></table>
<table><tr><td bgcolor=DarkSeaGreen>Endpoint：oss-cn-beijing.aliyuncs.com</td></tr></table>
<table><tr><td bgcolor=DarkSeaGreen>AccessKey ID： LTAxxxxx</td></tr></table>
<table><tr><td bgcolor=DarkSeaGreen>AccessKey Secret： h0nxxxx</td></tr></table></li>
</ol>
<p><code>注：为了安全，本次记录的所有bucket、账号信息均已删除，失效。大家在创建的时候注意信息安全，避免数据泄露造成的经济损失。</code></p>
<h2 id="基础设施篇"><a href="#基础设施篇" class="headerlink" title="基础设施篇"></a>基础设施篇</h2><p>notea笔记应用支持docker部署，且占用资源少，所以对部署的设备、环境兼容性高。搭建所选择的基础设施可以是云服务器、云主机，也可以是支持docker的NAS、个人PC、软路由等设备中。</p>
<p>本次选择的是“随身wifi”，去年比较火的时候，十几块包邮买了一个。高通410的CPU，刷入debian后，随便找个插座就是一台“服务器”了。关于这个棒子，网上刷机教程、玩法特别多，已有大佬总结版本：<a href="https://blog.csdn.net/weixin_41099712/article/details/130711724">https://blog.csdn.net/weixin_41099712/article/details/130711724</a> 。我目前这个棒子刷入debian后docker跑了一个GPT，一个notea，具体信息如下，不得不说这个棒子还挺能打的。</p>
<p> <img src="https://img-cdz.oss-cn-shanghai.aliyuncs.com/images/20240219-410%E9%9A%8F%E8%BA%ABwifi.png"></p>
<p> <img src="https://img-cdz.oss-cn-shanghai.aliyuncs.com/images/20240219-%E9%9A%8F%E8%BA%ABwifi%E4%BF%A1%E6%81%AF.png"></p>
<p><code>注：使用随身WiFi只是“兴趣使然”，完全可以在更稳定的环境下部署使用。这也体现自建笔记的一个优势，就算这个设备坏了，数据存在OSS中，在其他环境重新搭建一个即可，不存在数据丢失的风险。</code></p>
<h2 id="应用搭建篇"><a href="#应用搭建篇" class="headerlink" title="应用搭建篇"></a>应用搭建篇</h2><ol>
<li><p>docker基本环境的安装。</p>
<p>docker的安装本文不做赘述了，引用几个大佬的分享。</p>
<p><a href="https://www.runoob.com/docker/docker-tutorial.html">菜鸟教程-Docker的介绍、部署与使用</a>。<a href="https://blog.csdn.net/m0_61503020/article/details/125456520?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170841489916800213059784%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=170841489916800213059784&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-125456520-null-null.142%5Ev99%5Epc_search_result_base2&utm_term=Docker&spm=1018.2226.3001.4187">CSDN Docker入门</a>。</p>
<p>如果你是小白，当你正确用到docker version，就可以了。</p>
</li>
<li><p>notea笔记的安装与运行。</p>
<p>首先放上notea开源地址：<a href="https://github.com/notea-org/notea">https://github.com/notea-org/notea</a> ，然后抱着选新不选旧的态度，本次选用的是main而不是latest，因为latest对应的版本为0.3.6，已经有两年没有更新了，版本差异应该不大，部署方式GitHub上有详细介绍，本文安装个人的安装过程进行记录，按照最方便的方式来，具体步骤分两步。</p>
<p>第一步，拉取notea main版本的镜像，使用“docker pull cinwell&#x2F;notea:main”命令拉取镜像，由于我这边已经下载好了，提示已更新。下载完成后可以使用“docker images”查看拉取的镜像信息。</p>
<p> <img src="https://img-cdz.oss-cn-shanghai.aliyuncs.com/images/20240219-%E6%8B%89%E5%8F%96notea%E9%95%9C%E5%83%8F.png"></p>
<p>第二步，写好docker命令，复制到控制台中，一键运行容器。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name notea \</span><br><span class="line">  -p 4000:3000 \</span><br><span class="line">  -e STORE_ACCESS_KEY=LTAxxxxx \</span><br><span class="line">  -e STORE_SECRET_KEY=h0nxxxxx \</span><br><span class="line">  -e STORE_BUCKET=chdz \</span><br><span class="line">  -e STORE_END_POINT=https://oss-cn-beijing.aliyuncs.com \</span><br><span class="line">  -e STORE_REGION=oss-cn-beijing \</span><br><span class="line">  -e PASSWORD=notea \</span><br><span class="line">  -e COOKIE_SECURE=false \</span><br><span class="line">cinwell/notea:main</span><br></pre></td></tr></table></figure>

<p>命令介绍与注意事项：</p>
<p>第一行、第二行，不用管；</p>
<p>第三行-p 指的是容器的端口映射，主机(宿主)端口:容器端口。4000：3000 指的是容器内的3000端口指向主机的4000端口。即，如果主机的IP地址是192.168.1.2，在局域网下，用192.168.1.2:4000 即可访问；</p>
<p>第四行“STORE_ACCESS_KEY”对应让你记下的“<strong>AccessKey ID</strong>”；</p>
<p>第五行“STORE_SECRET_KEY”对应“<strong>AccessKey Secret</strong>”；</p>
<p>第六行“STORE_BUCKET”对应“<strong>Bucket名称</strong>”；</p>
<p>第七行“STORE_END_POINT”对应“<strong>Endpoint</strong>”，<strong>注意，由于阿里云自身的安全考虑，此处必需要加上 https:&#x2F;&#x2F;</strong></p>
<p>第八行“STORE_REGION”，选择Endpoint的对应的地址即可。</p>
<p>第九行是笔记的密码，自行设置；</p>
<p>第十行是设定是否走的https，一般选择false；</p>
<p>第十一行是本容器选择的镜像（第一步拉取notea的main版本）。</p>
<p>执行完成后，可以查看容器的运行状态。</p>
</li>
<li><p>docker与容器的自启。</p>
<p>这一步或许你在docker的安装环境已经设置过了，那就可以跳过。</p>
<p>docker开机自启命令“systemctl enable docker”；</p>
<p>notea容器自启命令“docker update –restart&#x3D;always notea”</p>
</li>
<li><p>局域网环境下，使用主机IP:4000就可以访问了，设置中文，版式，导入导出等用法，可自行摸索。<br><img src="https://img-cdz.oss-cn-shanghai.aliyuncs.com/images/20240219-notea%E7%95%8C%E9%9D%A21.png"></p>
</li>
</ol>
<h2 id="网络篇"><a href="#网络篇" class="headerlink" title="网络篇"></a>网络篇</h2><p>若基础设施使用的云服务器、ECS等有公网IP，或者IPv6地址的，可直接访问即可。</p>
<p>本次使用的 使用FRP作为内网穿透方式，实现公网访问。</p>
<p>FRP教程，等有空继续写~~~</p>
]]></content>
      <categories>
        <category>TechNotes</category>
      </categories>
      <tags>
        <tag>note-tag</tag>
      </tags>
  </entry>
</search>
